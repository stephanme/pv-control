// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ui-primary: mat.define-palette(mat.$indigo-palette);
$ui-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ui-warn: mat.define-palette(mat.$red-palette);

$ui-typography: mat.define-typography-config();

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ui-theme: mat.define-light-theme((
  color: (
    primary: $ui-primary,
    accent: $ui-accent,
    warn: $ui-warn,
  ),
  typography: $ui-typography,
  density: 0,
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

@include mat.core-theme($ui-theme);

// https://github.com/angular/components/blob/main/src/material/core/theming/_all-theme.scss
@include mat.toolbar-theme($ui-theme);
@include mat.card-theme($ui-theme);
@include mat.form-field-theme($ui-theme);
@include mat.input-theme($ui-theme);
@include mat.icon-theme($ui-theme);
@include mat.button-theme($ui-theme);
@include mat.slide-toggle-theme($ui-theme);
@include mat.snack-bar-theme($ui-theme);
@include mat.button-toggle-theme($ui-theme);

@include mat.typography-hierarchy($ui-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
}

/* text */
.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

/* margins */
.ml-1 {
  margin-left: 1em;
}

.mr-1 {
  margin-right: 1em;
}

.mt-1 {
  margin-top: 1em;
}

.mb-1 {
  margin-bottom: 1em;
}

/* colors */

.col-primary {
  color: mat.get-color-from-palette($ui-primary, 'default');
}

.col-grey {
  color: #9E9E9E;
}

.col-yellow {
  color: #ffc107;
}

.col-green {
  color: #28a745;
}

.col-red {
  color: #dc3545;
}

/* flex and grid layout, https://github.com/angular/flex-layout/issues/1426 */
.flex-row {
  display: flex !important;
  flex-direction: row;
}

.flex-col {
  display: flex !important;
  flex-direction: column;
}

.flex-1 {
  flex: 1
}

.flex-grow {
  flex-grow: 1;
}

.flex-none {
  flex: none
}

.justify-center {
  justify-content: center;
}

.gap-10 {
  gap: 10px;
}

.grid {
  display: grid !important;
}

.grid-col-span-2 {
  grid-column: span 2 / auto;
}
ÃŸ
/* others */

.spin {
  -webkit-animation: spin 2s infinite linear;
  animation: spin 2s infinite linear;
}

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}