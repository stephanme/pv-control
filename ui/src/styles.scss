// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use './themes';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.elevation-classes();
@include mat.app-background();


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

html {
  @include mat.elevation-classes();
  @include mat.app-background();

  // https://github.com/angular/components/blob/main/src/material/core/theming/_all-theme.scss
  @include mat.toolbar-theme(themes.$light-theme);
  @include mat.card-theme(themes.$light-theme);
  @include mat.icon-theme(themes.$light-theme);
  @include mat.button-theme(themes.$light-theme);
  @include mat.icon-button-theme(themes.$light-theme);
  @include mat.snack-bar-theme(themes.$light-theme);
  @include mat.button-toggle-theme(themes.$light-theme);

  .col-primary {
    color: mat.get-theme-color(themes.$light-theme, primary);
  }

  // only include colors to avoid style duplication (see https://material.angular.io/guide/duplicate-theming-styles)
  @media (prefers-color-scheme: dark) {
    @include mat.elevation-classes();
    @include mat.app-background();

    @include mat.toolbar-color(themes.$dark-theme);
    @include mat.card-color(themes.$dark-theme);
    @include mat.icon-color(themes.$dark-theme);
    @include mat.button-color(themes.$dark-theme);
    @include mat.icon-button-color(themes.$dark-theme);
    @include mat.snack-bar-color(themes.$dark-theme);
    @include mat.button-toggle-color(themes.$dark-theme);

    .col-primary {
      color: mat.get-theme-color(themes.$dark-theme, primary);
    }  
  }
}

.col-grey {
  color: #9E9E9E;
}

.col-yellow {
  color: #ffc107;
}

.col-green {
  color: #28a745;
}

.col-red {
  color: #dc3545;
}

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
}

/* text */
.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

/* margins */
.ml-1 {
  margin-left: 1em;
}

.mr-1 {
  margin-right: 1em;
}

.mt-1 {
  margin-top: 1em;
}

.mb-1 {
  margin-bottom: 1em;
}

/* flex and grid layout, https://github.com/angular/flex-layout/issues/1426 */
.flex-row {
  display: flex !important;
  flex-direction: row;
}

.flex-col {
  display: flex !important;
  flex-direction: column;
}

.flex-1 {
  flex: 1
}

.flex-grow {
  flex-grow: 1;
}

.flex-none {
  flex: none
}

.justify-center {
  justify-content: center;
}

.gap-10 {
  gap: 10px;
}

.grid {
  display: grid !important;
}

.grid-col-span-2 {
  grid-column: span 2 / auto;
}

// self-hosted material symbols
// for development: add to index.html:
//   <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0..1,0&display=block&icon_names=autorenew,battery_3_bar,battery_charging_50,battery_full,battery_unknown,electric_car,ev_station,home,hourglass_bottom,power,power_off,thermometer,wb_sunny" />
// Note: icon_names param doesn't work with FILL=1, only with FILL=0..1
// for production: download the font and save as matsymbols.woff2 in src/media folder

@font-face {
  font-family: 'Material Symbols Outlined';
  font-style: normal;
  font-weight: 400;
  font-display: block;
  src: url(./media/matsymbols.woff2) format('woff2');
}

.material-symbols-outlined {
  font-family: 'Material Symbols Outlined';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
  font-variation-settings: 'FILL' 1 /* use filled icons by default */
}

/* others */

.spin {
  -webkit-animation: spin 2s infinite linear;
  animation: spin 2s infinite linear;
}

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}